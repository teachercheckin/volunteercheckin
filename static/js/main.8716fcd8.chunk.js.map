{"version":3,"sources":["components/Reader.js","Util.js","images/Logo.png","pages/Scan.js","components/ToPrint.js","pages/Print.js","pages/Manual.js","Doc.js","api/spreadsheetID.js","App.js","reportWebVitals.js","index.js"],"names":["delayCount","Reader","props","video","useRef","canvasRef","_useState","useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","black","setBlack","tick","periodic","setTimeout","current","readyState","HAVE_ENOUGH_DATA","height","videoHeight","width","videoWidth","canvas","getContext","drawImage","imageData","getImageData","code","jsQR","data","inversionAttempts","console","log","time","Date","useEffect","onScan","isMounted","inter","setInterval","requestAnimationFrame","clearInterval","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","setAttribute","play","_unused","_jsxs","children","_jsx","style","filter","ref","hidden","CODE_PER_SCREEN","sleep","Promise","resolve","Math","ceil","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","scanList","scanHistory","recentList","shutter","recentCount","Scan","toLocaleDateString","todayDate","setTodayDate","currentTimeSec","setCurrentTimeSec","_handleScan","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","id","wrap","_context4","prev","next","getTime","parseInt","push","abrupt","stop","apply","Recent","header","map","entry","checkDuplicate","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","_initialize","_callee","tD","prop","initNoti","tS","date","_prop2","_context","toast","dismiss","doc","isOpen","sheetsByDate","sent","type","TYPE","WARNING","warning","text","reloadPage","ERROR","error","noSheet","getCachedList","has","toString","info","loading","sheet","readList","title","SUCCESS","render","loaded","update","initialize","checkId","_x2","_checkId","_callee3","currentTime","action","_context3","toLocaleTimeString","hour12","hour","minute","getStudent","noStudent","idx","checkIn","valueType","success","name","checkOut","warn","alreadyDone","concat","_toConsumableArray","shift","updateCell","interval","_callee2","timeSec","_context2","second","src","Logo","alt","_x","ret","ToPrint","React","forwardRef","className","Print","inputText","setInputText","studentList","setStudentList","_useState5","_useState6","printList","setPrintList","_useDebounce","useDebounce","searchQuery","_useState7","_useState8","searchResults","setSearchResults","_useState9","_useState10","selectedCodes","setSelectedCodes","_useState11","_useState12","displayedCodes","setDisplayedCodes","_useState13","_useState14","showMarked","setShowMarked","_useState15","_useState16","showSearched","setShowSearched","_useState17","_useState18","pageNum","setPageNum","printRef","handlePrint","useReactToPrint","content","_addMarkedStudents","results","resultString","resultObject","toLowerCase","sheetInfo","cachedData","_prop","idIdx","idList","nameIdx","nameList","list","printIdx","findMostRecentSheet","failedToOpen","print","min","t0","t1","succeededToOpen","findStudents","_findStudents","row","includes","finish","_query","sr","query","startIdx","count","slice","placeholder","onChange","event","target","onClick","add","_Fragment","QRCode","size","c","pages","page","printCodes","_loop","_step2","ids","Set","_iterator2","selectedIds","getCurrentTime","Manual","sheetKey","selectedId","selectIdImpl","selectId","_ref2","_callee5","_context5","_objectSpread","showEntries","cIn","cOut","cInDisabled","cOutDisabled","formattedValue","_callee6","_context6","disabled","spreadsheetID","production","development","GoogleSpreadsheet","require","dateFormatOptions","year","month","day","dateDiffInDays","a","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","abs","floor","findHeader","headers","Doc","_classCallCheck","state","initialized","cachedList","_createClass","key","_openDoc","useServiceAccountAuth","config","loadInfo","Object","keys","_sheetsByTitle","arg","sheetsByTitle","_sheetsByDate","_i","_dateFormatOptions","option","str","found","_i2","_dateFormatOptions2","_option","dateStr","loadCells","createHeader","classIdx","checkInIdx","checkOutIdx","columnCount","getCell","class","_readList","rowIdx","ROW_RANGE","lastIdx","rowSize","increment","nullCount","_args4","rowCount","fromCharCode","_x3","_getStudent","todaySheet","studentNumber","studentRowNumber","findStudentRow","ASCII_A","_x4","_updateCell","saveUpdatedCells","_findStudentRow","_callee7","ID","_context7","_x5","_findMostRecentSheet","_callee8","sheetDate","today","_context8","setDate","App","process","APP_NAME","APP_VERSION","openDoc","Router","Link","to","Routes","Route","path","element","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","icon","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8716fcd8.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport jsQR from \"jsqr\";\r\nimport \"../App.css\";\r\n\r\nconst PAUSE_COUNT = 5;\r\nlet delayCount = 0;\r\nfunction Reader(props) {\r\n    const video = useRef();\r\n    const canvasRef = useRef();\r\n    const [result, setResult] = useState();\r\n    const [black, setBlack] = useState(false);\r\n\r\n    function shutter() {\r\n        setBlack(true);\r\n        setTimeout(() => {\r\n            setBlack(false);\r\n        }, 300);\r\n    }\r\n\r\n    useEffect(\r\n        function () {\r\n            if (result) {\r\n                props.onScan(result.data);\r\n                setResult(null);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [result]\r\n    );\r\n\r\n    useEffect(function () {\r\n        let isMounted = true;\r\n        const inter = setInterval(() => {\r\n            if (!isMounted)\r\n            {\r\n                console.log(\"Unmounted reader call\");\r\n                return;\r\n            }\r\n            requestAnimationFrame(tick);\r\n        }, 200);\r\n        return () => {\r\n            console.log(\"Clear interval for reader\");\r\n            isMounted = false;\r\n            clearInterval(inter);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        function () {\r\n            navigator.mediaDevices\r\n                .getUserMedia({ video: { facingMode: \"environment\" } })\r\n                .then(function (stream) {\r\n                    console.log(stream);\r\n                    try {\r\n                        video.current.srcObject = stream;\r\n                        video.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\r\n                        video.current.play();\r\n                    } catch {}\r\n                });\r\n        },\r\n        [video, canvasRef]\r\n    );\r\n\r\n    function tick() {\r\n        if (props.periodic()) shutter();\r\n        if (--delayCount > 0) return;\r\n        if (video && video.current && video.current.readyState === video.current.HAVE_ENOUGH_DATA) {\r\n            canvasRef.current.height = video.current.videoHeight;\r\n            canvasRef.current.width = video.current.videoWidth;\r\n\r\n            var canvas = canvasRef.current.getContext(\"2d\");\r\n\r\n            canvas.drawImage(\r\n                video.current,\r\n                0,\r\n                0,\r\n                canvasRef.current.width,\r\n                canvasRef.current.height\r\n            );\r\n            var imageData = canvas.getImageData(\r\n                0,\r\n                0,\r\n                canvasRef.current.width,\r\n                canvasRef.current.height\r\n            );\r\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\r\n                inversionAttempts: \"dontInvert\",\r\n            });\r\n            if (code) {\r\n                console.log(code.data);\r\n                setResult({ data: code.data, time: new Date() });\r\n                delayCount = PAUSE_COUNT;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <video\r\n                style={{\r\n                    filter: black ? \"brightness(0%)\" : \"brightness(100%)\",\r\n                }}\r\n                ref={video}\r\n            ></video>\r\n            <canvas ref={canvasRef} hidden></canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reader;\r\n","export const CODE_PER_SCREEN = 24;\r\nexport const CODE_PER_PAGE = 12;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo.f0526f33.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Reader from \"../components/Reader\";\r\nimport { sleep, toastProp } from \"../Util\";\r\n\r\nimport \"./Scan.css\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport text from \"../api/text\";\r\n\r\nconst SCAN_INTERVAL = 1000;\r\nconst CHECK_INTERVAL = 5000;\r\nconst scanList = [];\r\nconst scanHistory = [];\r\nconst recentList = [];\r\nlet shutter = false;\r\n\r\nlet recentCount = 0;\r\nfunction addToRecentList(value) {\r\n    recentList.push([recentCount, ...value]);\r\n    if (recentList.length > 5) recentList.shift();\r\n    recentCount += 1;\r\n}\r\n\r\nfunction Scan(props) {\r\n    const [todayDate, setTodayDate] = useState(new Date().toLocaleDateString());\r\n    const [currentTimeSec, setCurrentTimeSec] = useState(\"\");\r\n\r\n    useEffect(function() {\r\n        console.log(\"Update today date \" + todayDate);\r\n    }, [todayDate]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            console.log(\"Wait for sheet\");\r\n            while (!props.doc.isOpen()) {\r\n                console.log(\"check\");\r\n                await sleep(1.0);\r\n            }\r\n            console.log(\"done\");\r\n            let tD = new Date();\r\n            const result = await props.doc.sheetsByDate(tD);\r\n            if (!result)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                prop.type = toast.TYPE.WARNING;\r\n                toast.warning(\r\n                    text.reloadPage, toastProp);\r\n                prop.type = toast.TYPE.ERROR;\r\n                toast.error(text.noSheet, toastProp);\r\n                return;\r\n            }\r\n            let initNoti = null;\r\n            const cachedData = props.doc.getCachedList();\r\n            if (!cachedData.has(result.header.id.toString()))\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, toastProp);\r\n            }\r\n            const tS = result.sheet;\r\n            const date = result.date;\r\n            await props.doc.readList(result.header.id);\r\n            console.log(\"tS\");\r\n            console.log(tS.title);\r\n            setTodayDate(date);\r\n\r\n            if (initNoti)\r\n            {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.autoClose = 3000;\r\n                prop.render = text.loaded;\r\n                toast.update(initNoti, prop);\r\n            }\r\n        }\r\n        initialize();\r\n\r\n    }, [props]);\r\n\r\n    function getCurrentTime() {\r\n        return new Date().toLocaleTimeString(\"en-US\", {\r\n            hour12: true,\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n        });\r\n    }\r\n\r\n    async function handleScan(data) {\r\n        const tick = new Date().getTime();\r\n        console.log(\"reached function \" + tick + \" \" + data);\r\n        const id = parseInt(data);\r\n        if (id > 0) scanList.push({tick:tick, id:id});\r\n\r\n        return;\r\n    }\r\n\r\n    function checkShutter() {\r\n        const ret = shutter;\r\n        shutter = false;\r\n        return ret;\r\n    }\r\n\r\n    function Recent() {\r\n        const header = (<tr><th id=\"name\">Name</th><th id=\"action\">action</th><th id=\"time\">time</th></tr>);\r\n        return (<table><tbody>{header}\r\n            {recentList.map(entry => (\r\n                <tr key={entry[0]}>\r\n                    <td key=\"name\" id=\"name\">{entry[1]}</td>\r\n                    <td key=\"action\" id=\"action\">{entry[2]}</td>\r\n                    <td key=\"time\" id=\"time\">{entry[3]}</td>\r\n                </tr>\r\n               ))\r\n            }\r\n        </tbody></table>)\r\n    }\r\n\r\n    function checkDuplicate(id) {\r\n        for (let h of scanHistory)\r\n        {\r\n            if (h.id === id) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Set QR code scan updater\r\n    useEffect(() => {\r\n        async function checkId(id)\r\n        {\r\n            console.log(\"handling scanning \" + id);\r\n\r\n            // Locate student in the spreadsheet today\r\n            const currentTime = getCurrentTime();\r\n\r\n            const info = await props.doc.getStudent(id);\r\n            if (!info)\r\n            {\r\n                // Student does not exist\r\n                toast.error(text.noStudent, toastProp);\r\n                return;\r\n            }\r\n            console.log(\"Student ID: \" + id + \" Idx:  \" + info.idx);\r\n            // Determine action to take\r\n            let action = null;\r\n            if (info.checkIn.valueType == null) {\r\n                // Check student in\r\n                info.checkIn.value = currentTime;\r\n                action = \"Check In\";\r\n\r\n                toast.success(text.checkIn.format(info.name.value, currentTime), toastProp);\r\n            } else if (info.checkOut.valueType == null) {\r\n                // Check student out\r\n                info.checkOut.value = currentTime;\r\n                action = \"Check Out\";\r\n\r\n                toast.success(text.checkOut.format(info.name.value, currentTime), toastProp);\r\n            } else {\r\n                // Student check in and out are both filled\r\n                toast.warn(\r\n                    text.alreadyDone.format(info.name.value), toastProp);\r\n                return;\r\n            }\r\n            console.log(action + \" \" + currentTime);\r\n            addToRecentList([info.name.value, action, currentTime]);\r\n            await props.doc.updateCell();\r\n            shutter = true;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const tick = new Date().getTime();\r\n            let timeSec = new Date().toLocaleTimeString(\"en-US\", {\r\n                hour12: true,\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: \"numeric\"\r\n            });\r\n            setCurrentTimeSec(timeSec);\r\n            while (scanHistory.length > 0 && tick - scanHistory[0].tick > CHECK_INTERVAL)\r\n            {\r\n                scanHistory.shift();\r\n            }\r\n            while (scanList.length > 0)\r\n            {\r\n                let entry = scanList.shift();\r\n\r\n                if (tick - entry.tick > SCAN_INTERVAL || checkDuplicate(entry.id)) continue;\r\n                scanHistory.push(entry);\r\n                await checkId(entry.id);\r\n                break;\r\n            }\r\n            return () => clearInterval(interval);\r\n        }, 200)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"scan\">\r\n            <div id=\"title\" >\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\"/>\r\n                <h1> SVKS Check In/Out </h1>\r\n            </div>\r\n            <div id=\"clock\">\r\n            {todayDate} {currentTimeSec}\r\n            </div>\r\n            <div id=\"contents\">\r\n                <div id=\"reader\">\r\n                    <Reader\r\n                        onScan={handleScan}\r\n                        periodic={checkShutter}/>\r\n                </div>\r\n                <div id=\"recent\">\r\n                    <h2>\r\n                        Recent Check In/Out\r\n                    </h2>\r\n                    <Recent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scan;\r\n","import React from \"react\";\r\nexport const ToPrint = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div\r\n            className=\"toPrint\"\r\n            ref={ref}\r\n            style={{\r\n                width: \"auto\",\r\n                // position: \"absolute\",\r\n                // // top: \"-100%\",\r\n                // zIndex: \"-100\",\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ToPrint;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Scan.css\"\r\nimport QRCode from \"react-qr-code\";\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { ToPrint } from \"../components/ToPrint\";\r\nimport { sleep, toastProp, CODE_PER_PAGE, CODE_PER_SCREEN } from \"../Util\";\r\nimport text from \"../api/text\";\r\n\r\nfunction Print(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [printList, setPrintList] = useState([]);\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedCodes, setSelectedCodes] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [showMarked, setShowMarked] = useState(false);\r\n    const [showSearched, setShowSearched] = useState(false);\r\n    const [pageNum, setPageNum] = useState(0);\r\n\r\n    const printRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            while (!props.doc.isOpen()) {\r\n                await sleep(0.1);\r\n            }\r\n\r\n            let sheetInfo = await props.doc.findMostRecentSheet();\r\n\r\n            if (!sheetInfo)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                toast.error(text.failedToOpen, prop);\r\n                return;\r\n            }\r\n            const cachedData = props.doc.getCachedList();\r\n            let initNoti = null;\r\n            if (!cachedData.has(sheetInfo.header.id.toString()) ||\r\n                !cachedData.has(sheetInfo.header.name.toString()) ||\r\n                (sheetInfo.header.print &&\r\n                 !(sheetInfo.header.print in cachedData) ))\r\n            {\r\n                console.log(\"Data should be loaded\");\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, prop);\r\n            }\r\n\r\n            console.log(sheetInfo.date);\r\n            const idIdx = sheetInfo.header.id;\r\n            const idList = await props.doc.readList(idIdx);\r\n            const nameIdx = sheetInfo.header.name;\r\n            const nameList = await props.doc.readList(nameIdx);\r\n            const list = [];\r\n            for (let i = 0 ; i < Math.min(idList.length, nameList.length); i++)\r\n            {\r\n               list.push({id: idList[i],  name: nameList[i]});\r\n            }\r\n            setStudentList(list);\r\n\r\n            const printIdx = sheetInfo.header.print;\r\n            if (printIdx)\r\n            {\r\n                setPrintList(await props.doc.readList(printIdx));\r\n            }\r\n\r\n            console.log(\"Sheet read \" + list.length);\r\n            if (initNoti) {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.render = text.succeededToOpen;\r\n                prop.autoClose = 3000;\r\n                toast.update(initNoti, prop);\r\n            }\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findStudents(text) {\r\n                let results = [];\r\n\r\n                for (const row of studentList) {\r\n                    if (results.length > 4) break;\r\n                    if ((row.id && row.id.toString().includes(text)) ||\r\n                        (row.name && row.name.toString().includes(text)))\r\n                    {\r\n                        let resultString = `${row.name}:  ${row.id}`;\r\n                        let resultObject = {\r\n                            text: resultString,\r\n                            name: row.name,\r\n                            id: row.id.toString(),\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findStudents(searchQuery);\r\n                    if (sr.length > 0) setSearchResults(sr);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, studentList]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            setShowMarked(printList.length > 0);\r\n        }, [printList]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            setShowSearched(searchResults.length > 0)\r\n        }, [searchResults]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            const length = selectedCodes.length;\r\n            if (length > CODE_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * CODE_PER_SCREEN;\r\n                const count = Math.min(CODE_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(selectedCodes.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(selectedCodes);\r\n                setPageNum(0);\r\n            }\r\n        }, [selectedCodes, pageNum]\r\n    );\r\n\r\n    async function addMarkedStudents() {\r\n        let results = [];\r\n\r\n        for (let i = 0 ; i < printList.length ; i++)\r\n        {\r\n            if (printList[i] && printList[i].toLowerCase() === \"x\" && studentList[i].id != null)\r\n            {\r\n                const entry = studentList[i];\r\n                let resultString = `${entry.name}:  ${entry.id}`;\r\n                let resultObject = {\r\n                    text: resultString,\r\n                    name: entry.name,\r\n                    id: entry.id.toString()\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n        }\r\n        setSelectedCodes([...selectedCodes, ...results]);\r\n    }\r\n\r\n    function addSelected() {\r\n        let results = [];\r\n        for (let i = 0 ; i < searchResults.length ; i++)\r\n        {\r\n            let result = searchResults[i];\r\n            let add = true;\r\n            selectedCodes.map((code) => {\r\n                if (code.id === result.id)\r\n                {\r\n                    add = false;\r\n                }\r\n                return \"\"\r\n            });\r\n            if (add)\r\n            {\r\n                results.push(result);\r\n            }\r\n        }\r\n        setSelectedCodes([...selectedCodes, ...results]);\r\n    }\r\n\r\n    function addAll() {\r\n        let results = [];\r\n        setSelectedCodes([]);\r\n        let ids = new Set();\r\n        for (const row of studentList) {\r\n            if (row.id == null || row.id.length === 0 || row.name == null || ids.has(row.id))\r\n            {\r\n                continue;\r\n            }\r\n            console.log(row)\r\n            let resultString = `${row.name}:  ${row.id}`;\r\n            let resultObject = {\r\n                text: resultString,\r\n                name: row.name,\r\n                id: row.id.toString(),\r\n            };\r\n            results.push(resultObject);\r\n            ids.add(row.id);\r\n        }\r\n        setSelectedCodes(results);\r\n    }\r\n\r\n    function removeAll() {\r\n        setSelectedCodes([]);\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (selectedCodes.length > (pageNum + 1) * CODE_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    function printCodes() {\r\n        let pages = [];\r\n        for (let i = 0 ; i < selectedCodes.length ; i += CODE_PER_PAGE)\r\n        {\r\n            const count = Math.min(CODE_PER_PAGE, selectedCodes.length - i);\r\n            pages.push(selectedCodes.slice(i, i + count));\r\n        }\r\n        return pages.map((page) => (\r\n                    <div id=\"qrList\">\r\n                        {page.map((code) => (\r\n                            <div key={code.id} id=\"qrCode\" >\r\n                                <QRCode size={160} value={code.id} />\r\n                                <p id=\"qrName\" >\r\n                                    {code.text}\r\n                                </p>\r\n                            </div>\r\n                         ))}\r\n                    </div>\r\n               ));\r\n    }\r\n\r\n    return (\r\n        <div id=\"print\">\r\n            <div id=\"title\">\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\" ></img>\r\n                <h1> Print QR Codes </h1>\r\n            </div>\r\n            <div id=\"printContents\" >\r\n                <input id=\"search\"\r\n                    placeholder={\"Search for student or enter a number...\"}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {searchResults.map((result) => {\r\n                    return (\r\n                        <div key={result.id} id=\"searchResult\"\r\n                            onClick={function () {\r\n                                let add = true;\r\n                                selectedCodes.map((code) => {\r\n                                    if (code.id === result.id)\r\n                                    {\r\n                                        add = false;\r\n                                    }\r\n                                    return \"\"\r\n                                });\r\n                                if (add)\r\n                                {\r\n                                    setSelectedCodes([...selectedCodes, result]);\r\n                                }\r\n                            }}>\r\n                            <h4> {result.text} </h4>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            {displayedCodes.length > 0 && (\r\n                <>\r\n                    <div id=\"selected\">\r\n                        {displayedCodes.map((code) => (\r\n                            <div key={code.id} id=\"selectedItem\">\r\n                                <QRCode size={100} value={code.id} />\r\n                                <p id=\"qrName\"> {code.text} </p>\r\n                                <button id=\"deleteButton\"\r\n                                    onClick={function () {\r\n                                        setSelectedCodes(\r\n                                            selectedCodes.filter(\r\n                                                (c) => parseInt(c.id) !== parseInt(code.id)\r\n                                            )\r\n                                        );\r\n                                    }}\r\n                                > X </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <ToPrint ref={printRef}>\r\n                        {printCodes()}\r\n                    </ToPrint>\r\n                </>\r\n            )}\r\n            {selectedCodes.length > CODE_PER_SCREEN && (\r\n                <div id=\"pageControl\" hidden={selectedCodes.length <= CODE_PER_SCREEN}>\r\n                    <button id=\"prevPage\" onClick={movePrev}> &lt;&lt; </button>\r\n                    <p id=\"pageNum\"> {pageNum+1} </p>\r\n                    <button id=\"nextPage\" onClick={moveNext}> &gt;&gt; </button>\r\n                </div>\r\n            )}\r\n            <button id=\"printButton\" hidden={displayedCodes.length === 0} onClick={handlePrint}>\r\n                Print codes\r\n            </button>\r\n            <button id=\"selectSearched\" hidden={!showSearched} onClick={addSelected}>\r\n                Select all search results\r\n            </button>\r\n            <button id=\"selectAll\" onClick={addAll}>\r\n                Select all\r\n            </button>\r\n            <button id=\"selectMarked\" hidden={!showMarked} onClick={addMarkedStudents}>\r\n                Print codes for marked students.\r\n            </button>\r\n            <button id=\"removeAll\" hidden={(!selectedCodes.length > 0)} onClick={removeAll}>\r\n                Remove all\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Print;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Scan.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { sleep, toastProp } from \"../Util\";\r\nimport text from \"../api/text\";\r\n\r\nconst selectedIds = new Set();\r\n\r\nfunction getCurrentTime() {\r\n    return new Date().toLocaleTimeString(\"en-US\", {\r\n        hour12: true,\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n    });\r\n}\r\n\r\nfunction Manual(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, selectIdImpl] = useState({id:-1});\r\n    const [todayDate, setTodayDate] = useState(new Date().toLocaleDateString());\r\n    const [currentTimeSec, setCurrentTimeSec] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            while (!props.doc.isOpen()) {\r\n                await sleep(0.1);\r\n            }\r\n\r\n            let tD = new Date();\r\n            const sheetInfo = await props.doc.sheetsByDate(tD);\r\n\r\n            if (!sheetInfo)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                toast.error(text.failedToOpen, prop);\r\n                return;\r\n            }\r\n            const cachedData = props.doc.getCachedList();\r\n            let initNoti = null;\r\n            if (!cachedData.has(sheetInfo.header.id.toString()) ||\r\n                !cachedData.has(sheetInfo.header.name.toString()) )\r\n            {\r\n                console.log(\"Data should be loaded\");\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, prop);\r\n            }\r\n\r\n\r\n            console.log(sheetInfo.date);\r\n            const idIdx = sheetInfo.header.id;\r\n            const idList = await props.doc.readList(idIdx);\r\n            const nameIdx = sheetInfo.header.name;\r\n            const nameList = await props.doc.readList(nameIdx);\r\n            const list = [];\r\n            for (let i = 0 ; i < Math.min(idList.length, nameList.length); i++)\r\n            {\r\n               list.push({id: idList[i],  name: nameList[i]});\r\n            }\r\n            setStudentList(list);\r\n\r\n            console.log(\"Sheet read \" + list.length);\r\n            if (initNoti) {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.autoClose = 3000;\r\n                prop.render = text.succeededToOpen;\r\n                toast.update(initNoti, prop);\r\n            }\r\n            setTodayDate(sheetInfo.date);\r\n        }\r\n        initialize();\r\n        return () => toast.dismiss();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findStudents(text) {\r\n                let results = [];\r\n\r\n                for (const row of studentList) {\r\n                    if (results.length > 4) break;\r\n                    if ((row.id && row.id.toString().includes(text)) ||\r\n                        (row.name && row.name.toString().includes(text)))\r\n                    {\r\n                        let resultString = `${row.id}: ${row.name}`;\r\n                        let resultObject = {\r\n                            id: row.id,\r\n                            name: row.name,\r\n                            text: resultString,\r\n                        };\r\n                        results.push(resultObject);\r\n                        selectedIds.add(row.id);\r\n                    }\r\n                }\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findStudents(searchQuery);\r\n                    if (sr.length > 0)\r\n                    {\r\n                        setSearchResults(sr);\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"No matching student\");\r\n                        setSearchResults([]);\r\n                    }\r\n                } else {\r\n                    console.log(\"No matching student\");\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, studentList]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            let timeSec = new Date().toLocaleTimeString(\"en-US\", {\r\n                hour12: true,\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: \"numeric\"\r\n            });\r\n            setCurrentTimeSec(timeSec);\r\n            return () => clearInterval(interval);\r\n        }, 200)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const checkIn = (id) => {\r\n        console.log('Check in ' + id);\r\n        const currentTime = getCurrentTime();\r\n        selectedId.checkIn.value = currentTime;\r\n        props.doc.updateCell();\r\n        toast.success(text.checkIn.format(selectedId.name.value, currentTime), toastProp);\r\n    }\r\n\r\n    const checkOut = (id) => {\r\n        console.log('Check out ' + id);\r\n        const currentTime = getCurrentTime();\r\n        selectedId.checkOut.value = currentTime;\r\n        props.doc.updateCell();\r\n        toast.success(text.checkOut.format(selectedId.name.value, currentTime), toastProp);\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        const info = await props.doc.getStudent(id);\r\n        console.log(\"Select \" + selectedId.id + \" \" + id);\r\n        console.log(selectedId);\r\n        if (!selectedId || !selectedId.id || selectedId.id !== id)\r\n        {\r\n            console.log(\"Selected\");\r\n            console.log(info);\r\n            selectIdImpl({...info, id:id});\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect\");\r\n            selectIdImpl({id:-1});\r\n        }\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        let cIn, cOut;\r\n        let cInDisabled;\r\n        let cOutDisabled;\r\n        cInDisabled = cOutDisabled = false;\r\n        cIn = \"Check In\";\r\n        cOut = \"Check Out\";\r\n        const hidden = (selectedId.id !== result.id);\r\n        if (!hidden)\r\n        {\r\n            if (selectedId.checkIn.valueType)\r\n            {\r\n                cIn = \"Check In: \" + selectedId.checkIn.formattedValue;\r\n                cInDisabled = true;\r\n            }\r\n            if (selectedId.checkOut.valueType)\r\n            {\r\n                cOut = \"Check Out: \" + selectedId.checkOut.formattedValue;\r\n                cOutDisabled = true;\r\n            }\r\n        }\r\n        return (<div key={result.id}><button type=\"button\" id=\"searchResult\" onClick={async () => {await selectId(result.id);}}> {result.text} </button>\r\n                    <div hidden={hidden}>\r\n                        <button type=\"button\" id=\"checkInOut\" disabled={cInDisabled} onClick={() => {checkIn(result.id)}}> {cIn} </button>\r\n                        <button type=\"button\" id=\"checkInOut\" disabled={cOutDisabled} onClick={() => {checkOut(result.id)}}> {cOut} </button>\r\n                    </div>\r\n                </div>);\r\n    }\r\n\r\n    return (\r\n        <div id=\"manual\">\r\n            <div id=\"title\">\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\" ></img>\r\n                <h1> Manual Check In/Out </h1>\r\n            </div>\r\n            <div id=\"clock\">\r\n            {todayDate} {currentTimeSec}\r\n            </div>\r\n            <div id=\"manualInput\" >\r\n                <input id=\"search\"\r\n                    placeholder={\"Search for student or enter a number...\"}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {\r\n                    searchResults.map((result) => {\r\n                        return showEntries(result);\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Manual;\r\n","import { spreadsheetID } from \"./api/spreadsheetID\";\r\nimport config from \"./api/config\";\r\nimport header from \"./api/header\";\r\n\r\nconst { GoogleSpreadsheet } = require(\"google-spreadsheet\");\r\n\r\nconst MAX_COLUMN = 26;\r\nconst ASCII_A = 65;\r\n\r\nlet sheetKey;\r\nif (process.env.NODE_ENV === \"development\")\r\n{\r\n    console.log(\"Development mode\");\r\n    sheetKey = \"development\";\r\n}\r\nelse\r\n{\r\n    console.log(\"Production mode\");\r\n    sheetKey = \"production\";\r\n}\r\n\r\nconst dateFormatOptions = [\r\n    { year: \"numeric\", month: \"numeric\", day: \"numeric\" },\r\n    { year: \"2-digit\", month: \"numeric\", day: \"numeric\" },\r\n    { year: \"numeric\", month: \"2-digit\", day: \"numeric\" },\r\n    { year: \"2-digit\", month: \"2-digit\", day: \"numeric\" },\r\n    { year: \"numeric\", month: \"numeric\", day: \"2-digit\" },\r\n    { year: \"2-digit\", month: \"numeric\", day: \"2-digit\" },\r\n    { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" },\r\n    { year: \"2-digit\", month: \"2-digit\", day: \"2-digit\" },\r\n];\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\nfunction dateDiffInDays(a, b) {\r\n    // https://stackoverflow.com/questions/3224834/get-difference-between-2-dates-in-javascript\r\n    // Discard the time and time-zone information.\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n    return Math.abs(Math.floor((utc2 - utc1) / _MS_PER_DAY));\r\n}\r\n\r\n\r\nfunction findHeader(value, headers)\r\n{\r\n    for (let h of headers)\r\n        if (h === value) return true ;\r\n\r\n    return false;\r\n}\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        const doc = new GoogleSpreadsheet(spreadsheetID[sheetKey]);\r\n        const sheetInfo = {sheet: null, date: null, header: null, cachedList: {}};\r\n        this.state = {doc: doc, initialized: false, sheetInfo: sheetInfo};\r\n    }\r\n\r\n    async openDoc() {\r\n        console.log('try to read sheet');\r\n        await this.state.doc.useServiceAccountAuth(config);\r\n        console.log('Auth Done');\r\n        await this.state.doc.loadInfo(); // loads document properties and worksheets\r\n        console.log('Done');\r\n        this.state.initialized = true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.state.initialized;\r\n    }\r\n\r\n    getCachedList() {\r\n        return new Set(Object.keys(this.state.sheetInfo.cachedList));\r\n    }\r\n\r\n    async sheetsByTitle(arg) {\r\n        this.state.sheetInfo.sheet = await this.state.doc.sheetsByTitle[arg];\r\n        this.state.sheetInfo.date = arg;\r\n\r\n        return this.state.sheetInfo;\r\n    }\r\n\r\n    async sheetsByDate(date) {\r\n        for (let option of dateFormatOptions) {\r\n            const str = date.toLocaleDateString(\"en-US\", option);\r\n            if (this.state.sheetInfo.date && str === this.state.sheetInfo.date)\r\n            {\r\n                console.log(\"Found \" + str);\r\n                console.log(this.state.sheetInfo);\r\n                return this.state.sheetInfo;\r\n            }\r\n        }\r\n        let found = false;\r\n        for (let option of dateFormatOptions) {\r\n            const dateStr = date.toLocaleDateString(\"en-US\", option);\r\n            const sheet = await this.state.doc.sheetsByTitle[dateStr];\r\n            if (sheet) {\r\n                this.state.sheetInfo.date = dateStr;\r\n                this.state.sheetInfo.sheet = sheet;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found)\r\n            return null;\r\n\r\n        console.log(\"Found sheet \" + this.state.sheetInfo.sheet);\r\n\r\n        // Find spreadsheet headers\r\n        await this.state.sheetInfo.sheet.loadCells('A1:Z1');\r\n        const header = this.createHeader(this.state.sheetInfo.sheet);\r\n        console.log(header);\r\n\r\n        this.state.sheetInfo.header = header;\r\n\r\n        return this.state.sheetInfo;\r\n    }\r\n\r\n    createHeader(tS = this.state.sheetInfo.sheet)\r\n    {\r\n        let idIdx = null;\r\n        let nameIdx = null;\r\n        let classIdx = null;\r\n        let checkInIdx = null;\r\n        let checkOutIdx = null;\r\n        let printIdx = null;\r\n        if (!tS)\r\n            return {};\r\n        for (let i = 0 ; i < Math.min(MAX_COLUMN, tS.columnCount) ; i++)\r\n        {\r\n            const entry = tS.getCell(0, i);\r\n            if (entry.valueType == null) continue;\r\n            nameIdx = (findHeader(entry.value, header.name)) ? i : nameIdx;\r\n            idIdx = (findHeader(entry.value, header.id)) ? i : idIdx;\r\n            classIdx = (findHeader(entry.value, header.class)) ? i : classIdx;\r\n            checkInIdx = (findHeader(entry.value, header.checkIn)) ? i : checkInIdx;\r\n            checkOutIdx = (findHeader(entry.value, header.checkOut)) ? i : checkOutIdx;\r\n            printIdx = (findHeader(entry.value, header.print)) ? i : printIdx;\r\n        }\r\n        return {id:idIdx, name:nameIdx, class:classIdx, checkIn:checkInIdx, checkOut:checkOutIdx, print:printIdx};\r\n    }\r\n\r\n    async readList(idIdx, tS = this.state.sheetInfo.sheet)\r\n    {\r\n        if (idIdx in this.state.sheetInfo.cachedList)\r\n            return this.state.sheetInfo.cachedList[idIdx];\r\n\r\n        let rowIdx = 0;\r\n        const ROW_RANGE = 100;\r\n        let ids = [];\r\n        if (!tS)\r\n            return [];\r\n        let lastIdx = null;\r\n        const rowSize = tS.rowCount;\r\n        while (rowIdx < rowSize-1)\r\n        {\r\n            // Read ROW_RANGE cell\r\n            const increment = Math.min(rowSize - rowIdx, ROW_RANGE);\r\n            const query = String.fromCharCode(ASCII_A+idIdx) + (rowIdx+1) + \":\" +\r\n                          String.fromCharCode(ASCII_A+idIdx) + (rowIdx+increment);\r\n            console.log(toString(idIdx) + \" \" + query);\r\n            await tS.loadCells(query);\r\n\r\n            let nullCount = 0;\r\n            for (let i = 0 ; i < ROW_RANGE ; i++)\r\n            {\r\n                const entry = tS.getCell(rowIdx + i, idIdx);\r\n                let id = null;\r\n                if (entry.valueType == null)\r\n                {\r\n                    nullCount++;\r\n                }\r\n                else\r\n                {\r\n                    id = entry.value;\r\n                    lastIdx = rowIdx + i;\r\n                }\r\n                ids.push(id);\r\n            }\r\n            // If all ROW_RANGE cells are empty, stop reading\r\n            if (nullCount === ROW_RANGE) break;\r\n            rowIdx += increment;\r\n        }\r\n        ids[0] = \"\";\r\n        ids = ids.slice(0, lastIdx+1);\r\n\r\n        this.state.sheetInfo.cachedList[idIdx] = ids;\r\n\r\n        return ids;\r\n    }\r\n\r\n    async getStudent(id) {\r\n        const todaySheet = this.state.sheetInfo.sheet;\r\n        if (!todaySheet)\r\n            return null;\r\n\r\n        // Locate student in the spreadsheet today\r\n        let studentNumber = id;\r\n        let studentRowNumber = await this.findStudentRow(studentNumber);\r\n\r\n        if (!studentRowNumber) {\r\n            return null;\r\n        }\r\n\r\n        const header = this.state.sheetInfo.header;\r\n        // Student ID is found\r\n        console.log(\"Student ID: \" + studentNumber + \" Index:\" + studentRowNumber);\r\n        const query = String.fromCharCode(ASCII_A) + (studentRowNumber) + \":\" +\r\n                      String.fromCharCode(ASCII_A+MAX_COLUMN-1) + (studentRowNumber);\r\n        console.log(query);\r\n        await todaySheet.loadCells(query);\r\n        const idx = studentRowNumber - 1;\r\n        console.log(\"Get Cell \" + idx + \" \" + header.name);\r\n        const name = todaySheet.getCell(idx, header.name);\r\n        const checkIn = todaySheet.getCell(idx, header.checkIn);\r\n        const checkOut = todaySheet.getCell(idx, header.checkOut);\r\n\r\n        return {idx: idx, name: name, checkIn: checkIn, checkOut: checkOut};\r\n    }\r\n\r\n    async updateCell()\r\n    {\r\n        const todaySheet = this.state.sheetInfo.sheet;\r\n        if (!todaySheet)\r\n            return null;\r\n        await todaySheet.saveUpdatedCells();\r\n    }\r\n\r\n    async findStudentRow(ID) {\r\n        const idList = await this.readList(this.state.sheetInfo.header.id);\r\n        console.log(\"finding student row \" + idList.length);\r\n        for (let i = 0 ; i < idList.length ; i++)\r\n        {\r\n            if (idList[i] && idList[i] === ID) return i + 1;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async findMostRecentSheet() {\r\n        let sheetDate = new Date();\r\n        let today = new Date();\r\n        while (dateDiffInDays(today, sheetDate) < 40)\r\n        {\r\n            const sheetInfo = await this.sheetsByDate(sheetDate);\r\n            if (sheetInfo)\r\n                return sheetInfo;\r\n            sheetDate.setDate(sheetDate.getDate() - 1);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","export const spreadsheetID = {production: \"1FqeRNFlZZ7aJdtYRmjZ1kRb2-sarN9aoTMGyu4jhGKs\",\r\n                              development: \"1FqeRNFlZZ7aJdtYRmjZ1kRb2-sarN9aoTMGyu4jhGKs\"};\r\n//12AWolV6lI99LM6NNP1bUwYanAuNDSWRJI8X4-ozM98Q\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Scan from \"./pages/Scan\";\r\nimport Print from \"./pages/Print\";\r\nimport Manual from \"./pages/Manual\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route, Link} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\n\r\nconst doc = new Doc();\r\nfunction App() {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            doc.openDoc();\r\n        }\r\n        initialize();\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <nav id=\"nav\">\r\n                    <table id=\"nav\"><tbody>\r\n                    <tr>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/\"><button id=\"nav_scan\">Scan</button></Link>\r\n                        </td>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/manual\"><button id=\"nav_manual\">Manual</button></Link>\r\n                        </td>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/print\"><button id=\"nav_print\">Print</button></Link>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody></table>\r\n                </nav>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div className=\"App\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Scan doc={doc} />} />\r\n                    <Route path=\"/print\" element={<Print doc={doc}/>} />\r\n                    <Route path=\"/manual\" element={<Manual doc={doc}/>} />\r\n                </Routes>\r\n\r\n                <ToastContainer\r\n                    position=\"bottom-center\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    icon={false}\r\n                />\r\n                <h2>\r\n                    For SVKS student volunteer use ONLY.\r\n                </h2>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}